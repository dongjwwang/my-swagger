// Code generated by go-swagger; DO NOT EDIT.

package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"my-swagger/src/pkg/v1/models"
)

// AddPolicyOKCode is the HTTP code returned for type AddPolicyOK
const AddPolicyOKCode int = 200

/*AddPolicyOK Success

swagger:response addPolicyOK
*/
type AddPolicyOK struct {
	/*The ID of the corresponding request for the response

	 */
	XRequestID string `json:"X-Request-Id"`
}

// NewAddPolicyOK creates AddPolicyOK with default headers values
func NewAddPolicyOK() *AddPolicyOK {

	return &AddPolicyOK{}
}

// WithXRequestID adds the xRequestId to the add policy o k response
func (o *AddPolicyOK) WithXRequestID(xRequestID string) *AddPolicyOK {
	o.XRequestID = xRequestID
	return o
}

// SetXRequestID sets the xRequestId to the add policy o k response
func (o *AddPolicyOK) SetXRequestID(xRequestID string) {
	o.XRequestID = xRequestID
}

// WriteResponse to the client
func (o *AddPolicyOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-Request-Id

	xRequestID := o.XRequestID
	if xRequestID != "" {
		rw.Header().Set("X-Request-Id", xRequestID)
	}

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// AddPolicyInternalServerErrorCode is the HTTP code returned for type AddPolicyInternalServerError
const AddPolicyInternalServerErrorCode int = 500

/*AddPolicyInternalServerError Internal server error

swagger:response addPolicyInternalServerError
*/
type AddPolicyInternalServerError struct {
	/*The ID of the corresponding request for the response

	 */
	XRequestID string `json:"X-Request-Id"`

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewAddPolicyInternalServerError creates AddPolicyInternalServerError with default headers values
func NewAddPolicyInternalServerError() *AddPolicyInternalServerError {

	return &AddPolicyInternalServerError{}
}

// WithXRequestID adds the xRequestId to the add policy internal server error response
func (o *AddPolicyInternalServerError) WithXRequestID(xRequestID string) *AddPolicyInternalServerError {
	o.XRequestID = xRequestID
	return o
}

// SetXRequestID sets the xRequestId to the add policy internal server error response
func (o *AddPolicyInternalServerError) SetXRequestID(xRequestID string) {
	o.XRequestID = xRequestID
}

// WithPayload adds the payload to the add policy internal server error response
func (o *AddPolicyInternalServerError) WithPayload(payload *models.Errors) *AddPolicyInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add policy internal server error response
func (o *AddPolicyInternalServerError) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddPolicyInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-Request-Id

	xRequestID := o.XRequestID
	if xRequestID != "" {
		rw.Header().Set("X-Request-Id", xRequestID)
	}

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
